################################################################################
##OCSInventory Version NG 1.01 Production
##Copyleft Emmanuel GUILLORY 2006
##Web : http://ocsinventory.sourceforge.net
##
##This code is open source and may be copied and modified as long as the source
##code is always made freely available.
##Please refer to the General Public Licence http://www.gnu.org/ or Licence.txt
################################################################################
;
;                             ###############
;                             #  CHANGELOG  #
;                             ###############
;4033
; win98 Sevice.ini bug
; win98 uninstall bug
;4031
; Added /nosplash
; Added stopservice and kill function before uninstall
; Added /upgrade (auto upgrade with deployment)
;
;4030
;added stopservice function before uninstall
;
;4027 win 9x service reboot issue patched
;ocsdat reading file option added
;Silent uninstall [/S] added
; Script partially generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "OCS Inventory Agent"
!define PRODUCT_VERSION "4.0.3.3"
!define PRODUCT_PUBLISHER "OCS Inventory Team"
!define PRODUCT_WEB_SITE "htttp://ocsinventory.sf.net"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\OCSInventory.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"
!include "FileFunc.nsh"
!insertmacro GetOptionsS
!insertmacro GetOptions


; MUI 1.67 compatible ------
!include "MUI.nsh"
ICON "aocs2.ico"
; MUI Settings
!define MUI_HEADERIMAGE
!define MUI_WELCOMEPAGE_TITLE_3LINES
;!define MUI_HEADERIMAGE_BITMAP "banner-ocs.bmp"
!define MUI_HEADERIMAGE_BITMAP "lOCS-ng-48.bmp" ; optional
;!define MUI_WELCOMEFINISHPAGE_BITMAP "lOCS-ng-48-2.bmp"

!define MUI_ABORTWARNING
!define MUI_ICON "aocs2.ico"
!define MUI_UNICON "uocs2.ico"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!insertmacro MUI_PAGE_LICENSE "license.txt"
;!insertmacro MUI_PAGE_COMPONENTS

; Directory page
Page custom customOCSFloc ValidatecustomOCSFloc ""

!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
;!define MUI_FINISHPAGE_RUN "$INSTDIR\ocsinventory.exe"
;!define MUI_FINISHPAGE_RUN_PARAMETERS "-install"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"
!insertmacro MUI_LANGUAGE "French"

; MUI end ------
  VIProductVersion "${PRODUCT_VERSION}"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "ProductName" "OcsServiceAgent"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "Comments" "Windows Service Agent for OCS Inventory"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "CompanyName" "Ocs Inventory ng Team"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "LegalTrademarks" "OcsServiceAgent is a part of ocs Inventory NG Application. Under GNU Licence."
  VIAddVersionKey /LANG=${LANG_ENGLISH} "LegalCopyright" "OCS Inventory Team http://ocsinventory.sourceforge.net"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "FileDescription" "OcsServiceAgent"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "FileVersion" "${PRODUCT_VERSION}"

  BRANDINGTEXT "OCS Inventory NG"
  Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
  OutFile "OcsAgentSetup.exe"
  InstallDir "$PROGRAMFILES\OCS Inventory Agent"
  InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
  ShowUnInstDetails show
  var OcsLogon_v ; to complete the debug option
Function .oninit
  InitPluginsDir
  File /oname=$PLUGINSDIR\options.ini "options.ini"
  File /oname=$PLUGINSDIR\splash.bmp "banner-ocs.bmp"
  System::Call 'kernel32::CreateMutexA(i 0, i 0, t "OcsSetupNG") i .r1 ?e'
  Pop $R0
  StrCmp $R0 0 not_running
  abort
not_running:
  Fileopen $9 "ocsdat" r
  Fileread $9 "$2"
  Fileclose $9
  strcmp $9 "" +2 0
  strcpy $CMDLINE '"$PLUGINSDIR\" $2'
  ;messagebox mb_OK $CMDLINE
; /nosplash option
  Push "$CMDLINE"
  Push "/nosplash"
  Call StrStr
  Pop $R9
  Strlen $0 $R9
  ;MESSAGEBOX MB_ok "$0 2Update OK :$R9"
  intcmp $0 9 Nsp 0 Nsp
  advsplash::show 900 160 840 0xFFFFF $PLUGINSDIR\splash
Nsp:
  Call parsecmd
FunctionEnd

Function testinstall
                    ;**********************
                    ;* detect admin right *
                    ;**********************
  Call IsUserAdmin
  Pop "$R0"
  strcmp $R0 "true" Okadmin 0
  messagebox MB_iconstop "Your are not logged on with admin privilege."
  abort
Okadmin:
;////////////Does service exist?
  readregstr $R0 HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OCS Inventory Agent"  UninstallString
  strcpy $R1 $R0 -11
  call stopservice
 ; execwait "$R1\ocsservice.exe -uninstall" $R0
  setoutpath "$R1"
  copyfiles /SILENT "$R1\inst32.exe" "$R1\inst32b.exe"
  sleep 1000
 ; execwait "$R1\uninst.exe " $R0 ;attention je rends tout de suite la main...
  execwait 'inst32b.exe /exe:"$R1\uninst.exe /S" /log:inst32b.log' ;attention je rends tout de suite la main...
  sleep 2000
  delete "$R1\inst32b.exe"

 FunctionEnd

Section "OCS Inventory Agent" SEC01
  Call testinstall
 ; Call parsecmd
  SetOutPath "$INSTDIR"
  SetOverwrite on
  File "ocsagent\BIOSINFO.EXE"
  File "ocsagent\download.exe"
  File "ocsagent\inst32.exe"
  File "ocsagent\libeay32.dll"
  File "ocsagent\mfc42.dll"
  File "ocsagent\OCSInventory.exe"
  File "ocsagent\OcsService.dll"
  File "ocsagent\OcsService.exe"
  File "ocsagent\OcsWmi.dll"
  File "ocsagent\ssleay32.dll"
  File "ocsagent\SysInfo.dll"
  File "ocsagent\PSAPI.DLL"
  File "ocsagent\zlib.dll"
  Call iniModif
  ;**************************************
  ; Correct detection of " /S" option   *
  ;**************************************
  strcpy $0 $CMDLINE  "" -3 #
  StrCmpS " /S" $0 quiet 0
  ${GetOptionsS} "$CMDLINE" "/S "  $R0
  IfErrors 0 +2
  goto  quiet_end
  quiet:
  Push "$CMDLINE"
  Push "/"
  Call StrStr
  Pop $1
  ;messagebox mb_ok "réécriture Miscellaneous"
  writeinistr "$INSTDIR\service.ini" "OCS_SERVICE" "Miscellaneous" "$1"
quiet_end:
  call startsvc
SectionEnd

;section "RemoteInstall" remote
; InstallOptions::dialog "$PLUGINSDIR\options2.ini"
;sectionend

Function StrStr
  Exch $R1 ; st=haystack,old$R1, $R1=needle
  Exch    ; st=old$R1,haystack
  Exch $R2 ; st=old$R1,old$R2, $R2=haystack
  Push $R3
  Push $R4
  Push $R5
  StrLen $R3 $R1
  StrCpy $R4 0
  ; $R1=needle
  ; $R2=haystack
  ; $R3=len(needle)
  ; $R4=cnt
  ; $R5=tmp
loop:
  StrCpy $R5 $R2 $R3 $R4
  StrCmp $R5 $R1 done
  StrCmp $R5 "" done
  IntOp $R4 $R4 + 1
  Goto loop
done:
  StrCpy $R1 $R2 "" $R4
  Pop $R5
  Pop $R4
  Pop $R3
  Pop $R2
  Exch $R1
FunctionEnd

Function un.StrStr
  Exch $R1 ; st=haystack,old$R1, $R1=needle
  Exch    ; st=old$R1,haystack
  Exch $R2 ; st=old$R1,old$R2, $R2=haystack
  Push $R3
  Push $R4
  Push $R5
  StrLen $R3 $R1
  StrCpy $R4 0
  ; $R1=needle
  ; $R2=haystack
  ; $R3=len(needle)
  ; $R4=cnt
  ; $R5=tmp
loop:
  StrCpy $R5 $R2 $R3 $R4
  StrCmp $R5 $R1 done
  StrCmp $R5 "" done
  IntOp $R4 $R4 + 1
  Goto loop
done:
  StrCpy $R1 $R2 "" $R4
  Pop $R5
  Pop $R4
  Pop $R3
  Pop $R2
  Exch $R1
FunctionEnd

Function startsvc
 ; Y a  t il une ancienne install
 ; *****************************
  strcpy $R7 $WINDIR 2
  IfFileExists "$R7\ocs-ng\ocsconv.dat" Traite
  IfFileExists "$R7\ocs-ng\ocsinventory.dat" 0 NonDat
  copyfiles "$R7\ocs-ng\ocsinventory.dat" "$INSTDIR\ocsinventory.dat"
  rename "$R7\ocs-ng\ocsinventory.dat" "$R7\ocs-ng\ocsconv.dat"
  goto Traite
NonDat:
  IfFileExists "$R7\ocs-ng\ocsinventory.conf" 0 Traite
  copyfiles "$R7\ocs-ng\ocsinventory.conf" "$INSTDIR\ocsinventory.conf"
  rename "$R7\ocs-ng\ocsinventory.conf" "$R7\ocs-ng\ocsconv.dat"
Traite:
  ;VRIFYING IF NOT NT
  ClearErrors
  ReadRegStr $R0 HKLM "SOFTWARE\Microsoft\Windows NT\CurrentVersion" CurrentVersion
  IfErrors 0 lbl_winnt
  writeregstr HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\RunServices" "OCS Inventory NG" "$INSTDIR\ocsservice.exe -debug"
goto not_nt
lbl_winnt:
  execwait "$INSTDIR\ocsservice -install" $R0
  execwait "$INSTDIR\ocsservice -start" $R0
  goto instend
not_nt:
  exec "$INSTDIR\ocsservice -debug"
instend:
FunctionEnd


Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\OCSInventory.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\OCSInventory.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
;********************************************
; UPDATE FUNCTION FOR GUI PACKAGING
;********************************************
  readinistr $1 "$INSTDIR\service.ini" "OCS_SERVICE" "Miscellaneous"
 ;MESSAGEBOX MB_ok "Miscellaneous :$1"
  Push $1
  Push "/upgrade"
  Call StrStr
  Pop $R9
  Strlen $0 $R9
  ;MESSAGEBOX MB_ok "$0 2Update OK :$R9"
  intcmp $0 8 updt 0 updt
  goto updt_end
updt:
  ;MESSAGEBOX MB_ok "3Upgrade OK :$R9"
  ;WRITE ../done
  setoutpath "$exedir"
  FileOpen $1 "..\done" w
  FileWrite $1 "SUCCESS"
  Fileclose $1
  ;MESSAGEBOX MB_ok "vérifier le fichier ..\done"
  ;IfFileExists  "..\..\..\download.exe" 0 +2
  ;MessageBox MB_OK "..\..\..\download.exe $CMDLINE    EXISTE"
  ;exec '"..\..\download.exe" $CMDLINE'
updt_end:
;***************FIN
SectionEnd


Function un.onUninstSuccess
  HideWindow
  Push "$CMDLINE"
  Push " /S"
  Call un.StrStr
  Pop $R9
  Strlen $0 $R9
  intcmp $0 2 sil1 0 sil1
  ;MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) a été désinstallé avec succès de votre ordinateur."
  ;VRIFYING IF NOT NT
  ;if not REBOOT
  ClearErrors
  ReadRegStr $R0 HKLM "SOFTWARE\Microsoft\Windows NT\CurrentVersion" CurrentVersion
  IfErrors 0 no_REBOOT
  messagebox MB_ok "Please restart your computer"
sil1:
  DeleteRegValue HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\RunServices" "OCS Inventory NG"
no_REBOOT:
FunctionEnd

Function stopservice
  nsExec::Exec 'net stop "OCS INVENTORY"'
  ; KillProcDLL ©2003 by DITMan, based upon the KILL_PROC_BY_NAME function programmed by Ravi, reach him at: http://www.physiology.wisc.edu/ravi/
  ;* 0 = Process was successfully terminated
  ;* 603 = Process was not currently running
  ;* 604 = No permission to terminate process
  ;* 605 = Unable to load PSAPI.DLL
  ;* 602 = Unable to terminate process for some other reason
  ;* 606 = Unable to identify system type
  ;* 607 = Unsupported OS
  ;* 632 = Invalid process name
  ;* 700 = Unable to get procedure address from PSAPI.DLL
  ;* 701 = Unable to get process list, EnumProcesses failed
  ;* 702 = Unable to load KERNEL32.DLL
  ;* 703 = Unable to get procedure address from KERNEL32.DLL
  ;* 704 = CreateToolhelp32Snapshot failed
  KillProcDLL::KillProc "OCSInventory.exe"
  pop $r0
  intcmp $r0 603 0 nstp nstp
  strcpy $r0 "0"
nstp:
  ;messagebox mb_ok "Result: '$r0'"
  seterrorlevel $r0
  KillProcDLL::KillProc "download.exe"
  pop $r0
  intcmp $r0 603 0 nstp1 nstp1
  strcpy $r0 "0"
nstp1:
KillProcDLL::KillProc "inst32.exe"
  pop $r0
  intcmp $r0 603 0 nstp2 nstp2
  strcpy $r0 "0"
nstp2:
 ; messagebox mb_ok "Result: '$r0'"
 KillProcDLL::KillProc "OcsService.exe"
  pop $r0
  intcmp $r0 603 0 nstp3 nstp3
  strcpy $r0 "0"
nstp3:
   seterrorlevel $r0
FunctionEnd

Function un.stopservice
   nsExec::Exec 'net stop "OCS INVENTORY"'
  ; KillProcDLL ©2003 by DITMan, based upon the KILL_PROC_BY_NAME function programmed by Ravi, reach him at: http://www.physiology.wisc.edu/ravi/
  ;* 0 = Process was successfully terminated
  ;* 603 = Process was not currently running
  ;* 604 = No permission to terminate process
  ;* 605 = Unable to load PSAPI.DLL
  ;* 602 = Unable to terminate process for some other reason
  ;* 606 = Unable to identify system type
  ;* 607 = Unsupported OS
  ;* 632 = Invalid process name
  ;* 700 = Unable to get procedure address from PSAPI.DLL
  ;* 701 = Unable to get process list, EnumProcesses failed
  ;* 702 = Unable to load KERNEL32.DLL
  ;* 703 = Unable to get procedure address from KERNEL32.DLL
  ;* 704 = CreateToolhelp32Snapshot failed
  KillProcDLL::KillProc "OCSInventory.exe"
  pop $r0
  intcmp $r0 603 0 nstp nstp
  strcpy $r0 "0"
nstp:
  ;messagebox mb_ok "Result: '$r0'"
  seterrorlevel $r0
  KillProcDLL::KillProc "download.exe"
  pop $r0
  intcmp $r0 603 0 nstp1 nstp1
  strcpy $r0 "0"
nstp1:
KillProcDLL::KillProc "inst32.exe"
  pop $r0
  intcmp $r0 603 0 nstp2 nstp2
  strcpy $r0 "0"
nstp2:
 ; messagebox mb_ok "Result: '$r0'"
 KillProcDLL::KillProc "OcsService.exe"
  pop $r0
  intcmp $r0 603 0 nstp3 nstp3
  strcpy $r0 "0"
nstp3:
   seterrorlevel $r0
FunctionEnd

Function un.onInit
  Push "$CMDLINE"
  Push " /S"
  Call un.StrStr
  Pop $R9
  Strlen $0 $R9
  intcmp $0 2 sil 0 sil
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure to unistall $(^Name)?" IDYES +2
  Abort
sil:
  call un.stopservice
  ;VRIFYING IF NOT NT
  ClearErrors
  ReadRegStr $R0 HKLM "SOFTWARE\Microsoft\Windows NT\CurrentVersion" CurrentVersion
  IfErrors not_nt1 0
  execwait "$INSTDIR\ocsservice.exe -uninstall" $R0
 not_nt1:
FunctionEnd

Section Uninstall
  Delete "$INSTDIR\uninst.exe"
  Delete "$INSTDIR\zlib.dll"
  Delete "$INSTDIR\SysInfo.dll"
  Delete "$INSTDIR\ssleay32.dll"
  Delete "$INSTDIR\OcsWmi.dll"
  Delete "$INSTDIR\OcsService.exe"
  Delete "$INSTDIR\OcsService.dll"
  Delete "$INSTDIR\OCSInventory.exe"
  Delete "$INSTDIR\mfc42.dll"
  Delete "$INSTDIR\libeay32.dll"
  Delete "$INSTDIR\inst32.exe"
 ; Delete "$INSTDIR\download.exe" preserved for update option
  Delete "$INSTDIR\BIOSINFO.EXE"
  Delete "$INSTDIR\PSAPI.DLL"
  RMDir "$INSTDIR"
  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"
  SetAutoClose true
SectionEnd

Function customOCSFloc
  !insertmacro MUI_HEADER_TEXT "          Options" "____________________"
  InstallOptions::dialog "$PLUGINSDIR\options.ini"
FunctionEnd

Function ValidatecustomOCSFloc
;call iniModif
FunctionEnd

Function iniModif
  strcpy $R1 ""
  ReadINIStr $R0 "$PLUGINSDIR\options.ini" "Field 2" "State"
  strcmp $R0 1 0 proxy
  strcpy $R1 " /NP"
proxy:
  writeinistr "$INSTDIR\service.ini" "OCS_SERVICE" "NoProxy" $R0
  ReadINIStr $R0 "$PLUGINSDIR\options.ini" "Field 5" "State"
  strcpy $R1 "$R1 /server:$R0"
  writeinistr "$INSTDIR\service.ini" "OCS_SERVICE" "Server" $R0
  ReadINIStr $R0 "$PLUGINSDIR\options.ini" "Field 6" "State"
  strcpy $R1 "$R1 /pnum:$R0"
  writeinistr "$INSTDIR\service.ini" "OCS_SERVICE" "Pnum" $R0
  ReadINIStr $R0 "$PLUGINSDIR\options.ini" "Field 8" "State"
  writeinistr "$INSTDIR\service.ini" "OCS_SERVICE" "Miscellaneous" "$R0 $R1"
  sleep 1000
FunctionEnd

Function parsecmd
;detection proxy
  writeINIStr "$PLUGINSDIR\options.ini" "Field 2" "State" "0"
  Push "$CMDLINE"
  Push " /np"
  Call StrStr
  Pop $R9
  Strlen $0 $R9
  intcmp $0 3 np 0 np
  goto np_end
  np:
  writeINIStr "$PLUGINSDIR\options.ini" "Field 2" "State" "1"
np_end:
;detection pnum
;**********************
;  Port Number option ;*
;**********************
  Push "$CMDLINE"
  Push " /pnum:"
  Call StrStr
  Pop $R9
  ;MESSAGEBOX MB_ok "port:$R9"
  Strlen $0 $R9
  strcpy $1 ""
  intcmp $0 5 port_use 0 port_use
  goto port_end
port_use:
  strcpy $R6 ""
  strcpy $R5 ""
  strcpy $R4 "0"
  strcpy $1 ""
;add_next:
;  intcmp $R4 $0 over 0 over
;  StrCpy $R5 $R9 7 $R4
;  IntOp $R4 $R4 + 1
;  messagebox mb_ok "VAL premier DE R9:  $R9"
;  StrCmp $R5 " /pnum:" get_number add_next
; on ajoute les 7 caractères suivants
; si = " /pnum:" alors on prend que les chiffres si pas un chiffre, on arrete
   IntOp $R4 $R4 + 7
get_number:
  StrCpy $R6 $R9 1 $R4
  strcmp $R6 "0" ADD_NUM
  strcmp $R6 "1" ADD_NUM
  strcmp $R6 "2" ADD_NUM
  strcmp $R6 "3" ADD_NUM
  strcmp $R6 "4" ADD_NUM
  strcmp $R6 "5" ADD_NUM
  strcmp $R6 "6" ADD_NUM
  strcmp $R6 "7" ADD_NUM
  strcmp $R6 "8" ADD_NUM
  strcmp $R6 "9" ADD_NUM port_end
  goto port_end
ADD_NUM:
  strcpy $1 "$1$R6"
  IntOp $R4 $R4 + 1
  goto get_number
port_end:
  strcmp "" "$1" +2
  writeINIStr "$PLUGINSDIR\options.ini" "Field 6" "State" "$1"
;messagebox mb_ok " $1 ok pnum"
  Push "$CMDLINE"
  Push " /server:"
  Call StrStr
  Pop $R9
  Strlen $0 $R9
  intcmp $0 9 folder_use 0 folder_use
  goto folder_end
folder_use:
  strcpy $R7 $R9 "" 9
; repérer la séquence {blanc slash}
  Push "$R7"
  Push " /"
  Call StrStr
  Pop $R9
  Strlen $2 $R7
  Strlen $1 $R9
  intcmp $1 0 0 0 +2
  intop $1 $1 + 1
  intop $3 $2 - $1
  strcpy $R7 $R7 $3 0
  writeINIStr "$PLUGINSDIR\options.ini" "Field 5" "State" "$R7"
folder_end:
  Push "$CMDLINE"
  Push "/"
  Call StrStr
  Pop $1
  writeINIStr "$PLUGINSDIR\options.ini" "Field 8" "State" "$1"
functionend

Function IsUserAdmin
  Push $R0
  Push $R1
  Push $R2
  ClearErrors
UserInfo::GetName
  IfErrors Win9x
Pop $R1
UserInfo::GetAccountType
  Pop $R2
  StrCmp $R2 "Admin" 0 Continue
; Observation: I get here when running Win98SE. (Lilla)
; The functions UserInfo.dll looks for are there on Win98 too,
; but just don't work. So UserInfo.dll, knowing that admin isn't required
; on Win98, returns admin anyway. (per kichik)
; MessageBox MB_OK 'User "$R1" is in the Administrators group'
  StrCpy $R0 "true"
 Goto Done
Continue:
; You should still check for an empty string because the functions
; UserInfo.dll looks for may not be present on Windows 95. (per kichik)
  StrCmp $R2 "" Win9x
  StrCpy $R0 "false"
;MessageBox MB_OK 'User "$R1" is in the "$R2" group'
  Goto Done
Win9x:
; comment/message below is by UserInfo.nsi author:
; This one means you don't need to care about admin or
; not admin because Windows 9x doesn't either
;MessageBox MB_OK "Error! This DLL can't run under Windows 9x!"
  StrCpy $R0 "true"
Done:
 ;MessageBox MB_OK 'User= "$R1"  AccountType= "$R2"  IsUserAdmin= "$R0"'
  Pop $R2
  Pop $R1
  Exch $R0
FunctionEnd

Function Write_Log
 ClearErrors
;messagebox mb_ok "$OcsLogon_v"
 strcmp $OcsLogon_v "" done 0
 FileOpen $0 "$exedir\OcsAgentSetup.log" a
 FileSeek $0 END END
 IfErrors done
 FileWrite $0 "$OcsLogon_v"
 strcpy $OcsLogon_v ""
 FileClose $0
done:
FunctionEnd